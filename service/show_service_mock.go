// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/show_service.go

// Package service is a generated GoMock package.
package service

import (
	gomock "github.com/golang/mock/gomock"
	entities "github.com/vibhugarg123/book-my-show/entities"
	reflect "reflect"
)

// MockShowService is a mock of ShowService interface
type MockShowService struct {
	ctrl     *gomock.Controller
	recorder *MockShowServiceMockRecorder
}

// MockShowServiceMockRecorder is the mock recorder for MockShowService
type MockShowServiceMockRecorder struct {
	mock *MockShowService
}

// NewMockShowService creates a new mock instance
func NewMockShowService(ctrl *gomock.Controller) *MockShowService {
	mock := &MockShowService{ctrl: ctrl}
	mock.recorder = &MockShowServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockShowService) EXPECT() *MockShowServiceMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockShowService) Add(arg0 entities.Show) (entities.Show, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(entities.Show)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add
func (mr *MockShowServiceMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockShowService)(nil).Add), arg0)
}
